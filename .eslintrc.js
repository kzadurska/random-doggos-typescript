module.exports = {
  extends: ['eslint-config-airbnb', 'prettier'],
  plugins: ['babel'],
  parser: 'babel-eslint',
  parserOptions: {
    ecmaVersion: 8,
    ecmaFeatures: { experimentalObjectRestSpread: true, jsx: true },
    sourceType: 'module',
  },
  env: { browser: true, es6: true, jest: true },
  settings: { react: { version: 'detect' } },
  plugins: ['babel'],
  rules: {
    'id-length': ['error', { min: 2, exceptions: ['a', 'b', 'x', 'y', 'i'] }],
    'no-console': 'error',
    'no-plusplus': 'off',
    'no-underscore-dangle': 'off',
    'no-use-before-define': 'off',
    'react/forbid-prop-types': 'warn',
    'react/jsx-handler-names': 'error',
    'react/jsx-filename-extension': 'off',
    'react/jsx-key': 'error',
    'react/no-direct-mutation-state': 'error',
    'react/jsx-props-no-spreading': 'off',
    'react/state-in-constructor': ['error', 'never'],
    'react/static-property-placement': ['warn', 'static public field'],
    'react/jsx-curly-newline': 'off',
    'jsx-quotes': ['error', 'prefer-double'],
    'jsx-ally/anchor-is-valid': 'off',
    radix: ['error', 'as-needed'],
    'import/no-extraneous-dependencies': 'off',
    'import/prefer-default-export': 'off',
    'import/no-unresolved': 'off',
    // good practice: check in code review
    'react/no-did-update-set-state': 'off',
    'react/no-did-mount-set-state': 'off',
    'react/destructuring-assignment': 'off',
    'no-nested-ternary': 'off',
    'no-param-reassign': ['error', { props: false }],
    'no-unused-expressions': 'off', // This doesn't work with '?.' operator syntax, so disabling...
    'babel/no-unused-expressions': ['error', { allowShortCircuit: true, allowTernary: true }], // ...and enabling this one instead, which is a modern version of the former
    // style/ prettier related
    'react/jsx-one-expression-per-line': 'off',
    'react/jsx-curly-brace-presence': 'off',
    'react/jsx-wrap-multilines': 'off',
    'implicit-arrow-linebreak': 'off',
    'object-curly-newline': 'off',
    indent: 'off',
    camelcase: 'off',
    'max-len': 'off',
    'comma-dangle': 'off',
  },
};

